{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Weilin\\\\Documents\\\\GitHub\\\\UrbanTreeConservation\\\\client\\\\src\\\\js\\\\components\\\\GetMarkers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch, useSelector, batch } from \"react-redux\";\nimport { Circle } from \"react-leaflet\";\nimport { Marker, Popup } from \"react-leaflet\";\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport { renderToString } from 'react-dom/server';\nimport PixiOverlay from 'react-leaflet-pixi-overlay';\nimport Slider from '@material-ui/core/Slider';\nimport { setSimilarityCity1, setSimilarityCity2, setSimilarityState1, setSimilarityState2 } from \"../features/analysisSlice\";\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useLeaflet } from \"react-leaflet\";\nimport Fab from '@material-ui/core/Fab';\nimport AdjustIcon from '@material-ui/icons/Adjust';\nimport { setEndpoint, getCity, clearCity, setScanStatus, setScanRadius, setScanCenter, setScanZoom, setViewStatus } from \"../features/markerSlice\";\nimport { setDrawMode, setSearch } from \"../features/mapSlice\";\nconst useStyles = makeStyles(theme => ({\n  scanMargin: {\n    margin: theme.spacing(1),\n    top: theme.spacing(34),\n    left: theme.spacing(1),\n    position: 'fixed',\n    zIndex: 1000\n  },\n  backdrop: {\n    zIndex: 1000\n  }\n}));\n\nconst GetMarkers = () => {\n  _s();\n\n  const stateMarker = useSelector(state => state.marker);\n  const stateAnalysis = useSelector(state => state.analysis);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const {\n    map\n  } = useLeaflet();\n  const [endpoint, setEndpoint] = useState();\n  const [scan_lat, setScanLat] = useState();\n  const [scan_lng, setScanLng] = useState();\n  const [scan_radius, setScanRadius] = useState();\n  const [loading, setLoading] = useState(0);\n\n  function handleSimilarityClick(city, state) {\n    if (stateAnalysis.similarityCity1 === \"\") {\n      batch(() => {\n        dispatch(setSimilarityCity1(city));\n        dispatch(setSimilarityState1(state));\n      });\n    } else if (stateAnalysis.similarityCity2 === \"\") {\n      batch(() => {\n        dispatch(setSimilarityCity2(city));\n        dispatch(setSimilarityState2(state));\n      });\n    }\n  }\n\n  function toRadian(degree) {\n    return degree * Math.PI / 180;\n  }\n\n  function getDistance(origin, destination) {\n    // return distance in meters\n    var lon1 = toRadian(origin[1]),\n        lat1 = toRadian(origin[0]),\n        lon2 = toRadian(destination[1]),\n        lat2 = toRadian(destination[0]);\n    var deltaLat = lat2 - lat1;\n    var deltaLon = lon2 - lon1;\n    var a = Math.pow(Math.sin(deltaLat / 2), 2) + Math.cos(lat1) * Math.cos(lat2) * Math.pow(Math.sin(deltaLon / 2), 2);\n    var c = 2 * Math.asin(Math.sqrt(a));\n    var EARTH_RADIUS = 6371;\n    return c * EARTH_RADIUS * 1000;\n  }\n\n  function handleclick(e) {\n    if (stateMarker.view_status === \"city\" || stateMarker.view_status === \"global\") {\n      if (map.getZoom() < stateMarker.cityZoom) {\n        map.setZoom(stateMarker.cityZoom);\n      }\n\n      const zoom = map.getZoom();\n      const center = map.getCenter();\n      const lat = center.lat;\n      const lng = center.lng;\n      const bounds = map.getBounds();\n      const latNE = bounds['_northEast'].lat;\n      const lngNE = bounds['_northEast'].lng;\n      const radius = Math.round(0.5 * getDistance([latNE, lngNE], [lat, lng]));\n      setScanLat(lat);\n      setScanLng(lng);\n      setScanRadius(radius);\n      dispatch(getCity(\"/api/get/city?lat=\" + lat + \"&lng=\" + lng + \"&radius=\" + radius));\n      setLoading(1);\n    }\n  }\n\n  if (stateMarker.view_status === \"global\") {\n    console.log(\"Draw global\");\n    return stateMarker.global.map((el, i) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [el.latitude, el.longitude],\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [el.city, \", \", el.state]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Number of Trees: \", el.total_species]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Number of Species: \", el.total_unique_species]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          pb: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          defaultValue: el.count_native,\n          step: null,\n          min: 0,\n          max: el.total_species,\n          valueLabelDisplay: \"on\",\n          marks: [{\n            value: el.count_native,\n            label: 'Native'\n          }, {\n            value: el.total_species,\n            label: (el.total_species / 1000).toFixed() + \"K\"\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleSimilarityClick(el.city, el.state),\n          value: el.city,\n          variant: \"outlined\",\n          size: \"small\",\n          color: \"primary\",\n          children: \"Compare\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }, this));\n  } else if (stateMarker.view_status === \"city\" && stateMarker.city.length == 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Fab, {\n        onClick: handleclick,\n        size: \"small\",\n        color: \"primary\",\n        \"aria-label\": \"add\",\n        className: classes.scanMargin,\n        children: /*#__PURE__*/_jsxDEV(AdjustIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Backdrop, {\n        open: loading,\n        className: classes.backdrop,\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this);\n  } else if (stateMarker.view_status === \"city\" && stateMarker.city.length > 0) {\n    console.log(\"Draw PixiOverlay\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(PixiOverlay, {\n        markers: stateMarker.city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Circle, {\n        weight: 1,\n        opacity: 0.5,\n        fill: false,\n        center: [scan_lat, scan_lng],\n        radius: 1.5 * scan_radius\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Fab, {\n        onClick: handleclick,\n        size: \"small\",\n        color: \"primary\",\n        \"aria-label\": \"add\",\n        className: classes.scanMargin,\n        children: /*#__PURE__*/_jsxDEV(AdjustIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this);\n  } else {\n    return null;\n  }\n};\n\n_s(GetMarkers, \"iw81/Dz38RmRxnNGE6k7GacWYHI=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useStyles, useLeaflet];\n});\n\n_c = GetMarkers;\nexport default GetMarkers;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetMarkers\");","map":{"version":3,"sources":["C:/Users/Weilin/Documents/GitHub/UrbanTreeConservation/client/src/js/components/GetMarkers.js"],"names":["React","useState","makeStyles","useDispatch","useSelector","batch","Circle","Marker","Popup","Button","Box","renderToString","PixiOverlay","Slider","setSimilarityCity1","setSimilarityCity2","setSimilarityState1","setSimilarityState2","Backdrop","CircularProgress","useLeaflet","Fab","AdjustIcon","setEndpoint","getCity","clearCity","setScanStatus","setScanRadius","setScanCenter","setScanZoom","setViewStatus","setDrawMode","setSearch","useStyles","theme","scanMargin","margin","spacing","top","left","position","zIndex","backdrop","GetMarkers","stateMarker","state","marker","stateAnalysis","analysis","dispatch","classes","map","endpoint","scan_lat","setScanLat","scan_lng","setScanLng","scan_radius","loading","setLoading","handleSimilarityClick","city","similarityCity1","similarityCity2","toRadian","degree","Math","PI","getDistance","origin","destination","lon1","lat1","lon2","lat2","deltaLat","deltaLon","a","pow","sin","cos","c","asin","sqrt","EARTH_RADIUS","handleclick","e","view_status","getZoom","cityZoom","setZoom","zoom","center","getCenter","lat","lng","bounds","getBounds","latNE","lngNE","radius","round","console","log","global","el","i","latitude","longitude","total_species","total_unique_species","count_native","value","label","toFixed","length"],"mappings":"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","sourcesContent":["import React, { useState} from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useDispatch, useSelector, batch } from \"react-redux\";\r\nimport { Circle } from \"react-leaflet\";\r\nimport { Marker, Popup } from \"react-leaflet\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport { renderToString } from 'react-dom/server';\r\nimport PixiOverlay from 'react-leaflet-pixi-overlay';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { setSimilarityCity1, setSimilarityCity2, setSimilarityState1, setSimilarityState2 } from \"../features/analysisSlice\";\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport { useLeaflet } from \"react-leaflet\";\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AdjustIcon from '@material-ui/icons/Adjust';\r\nimport { setEndpoint, getCity, clearCity, setScanStatus, setScanRadius, setScanCenter, setScanZoom, setViewStatus } from \"../features/markerSlice\";\r\nimport { setDrawMode, setSearch } from \"../features/mapSlice\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  scanMargin: {\r\n    margin: theme.spacing(1),\r\n    top: theme.spacing(34),\r\n    left: theme.spacing(1),\r\n    position: 'fixed',\r\n    zIndex: 1000,\r\n  },\r\n  backdrop: {\r\n    zIndex:1000\r\n  }\r\n}));\r\n\r\nconst GetMarkers = () => {\r\n    const stateMarker = useSelector(state => state.marker);\r\n    const stateAnalysis = useSelector(state => state.analysis);\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n    const { map } = useLeaflet();\r\n\r\n    const [endpoint, setEndpoint] = useState();\r\n    const [scan_lat, setScanLat] = useState();\r\n    const [scan_lng, setScanLng] = useState();\r\n    const [scan_radius, setScanRadius] = useState();\r\n    const [loading, setLoading] = useState(0);\r\n\r\n    function handleSimilarityClick(city, state) {\r\n        if (stateAnalysis.similarityCity1 === \"\") {\r\n            batch(() => {\r\n                dispatch(setSimilarityCity1(city));\r\n                dispatch(setSimilarityState1(state));\r\n            });\r\n        } else if (stateAnalysis.similarityCity2 === \"\") {\r\n            batch(() => {\r\n                dispatch(setSimilarityCity2(city));\r\n                dispatch(setSimilarityState2(state));\r\n            });\r\n        }\r\n    }\r\n\r\n        function toRadian(degree) {\r\n        return degree*Math.PI/180;\r\n    }\r\n\r\n    function getDistance(origin, destination) {\r\n        // return distance in meters\r\n        var lon1 = toRadian(origin[1]),\r\n            lat1 = toRadian(origin[0]),\r\n            lon2 = toRadian(destination[1]),\r\n            lat2 = toRadian(destination[0]);\r\n\r\n        var deltaLat = lat2 - lat1;\r\n        var deltaLon = lon2 - lon1;\r\n\r\n        var a = Math.pow(Math.sin(deltaLat/2), 2) + Math.cos(lat1) * Math.cos(lat2) * Math.pow(Math.sin(deltaLon/2), 2);\r\n        var c = 2 * Math.asin(Math.sqrt(a));\r\n        var EARTH_RADIUS = 6371;\r\n        return c * EARTH_RADIUS * 1000;\r\n    }\r\n\r\n    function handleclick(e) {\r\n        if (stateMarker.view_status === \"city\" || stateMarker.view_status === \"global\") {\r\n            if (map.getZoom() < stateMarker.cityZoom) {\r\n                map.setZoom(stateMarker.cityZoom);\r\n            }\r\n            const zoom = map.getZoom();\r\n            const center = map.getCenter();\r\n            const lat = center.lat;\r\n            const lng = center.lng;\r\n            const bounds = map.getBounds();\r\n            const latNE = bounds['_northEast'].lat\r\n            const lngNE = bounds['_northEast'].lng\r\n            const radius = Math.round(0.5*getDistance([latNE, lngNE],[lat, lng]));\r\n            setScanLat(lat);\r\n            setScanLng(lng);\r\n            setScanRadius(radius);\r\n\r\n            dispatch(getCity(\"/api/get/city?lat=\"+lat+\"&lng=\"+lng+\"&radius=\"+radius));\r\n            setLoading(1);\r\n        }\r\n\r\n    }\r\n\r\n    if (stateMarker.view_status === \"global\"){\r\n        console.log(\"Draw global\");\r\n\r\n        return stateMarker.global.map((el, i) => (\r\n          <Marker\r\n            key={i}\r\n            position={[el.latitude, el.longitude]}\r\n          >\r\n            <Popup>\r\n                <p>{el.city}, {el.state}</p>\r\n                <p>Number of Trees: {el.total_species}</p>\r\n                <p>Number of Species: {el.total_unique_species}</p>\r\n                <Box pb={4} />\r\n                <Slider\r\n                    defaultValue={el.count_native}\r\n                    step={null}\r\n                    min={0}\r\n                    max={el.total_species}\r\n                    valueLabelDisplay=\"on\"\r\n                    marks={\r\n                        [\r\n                          {value: el.count_native,label: 'Native'},\r\n                          {value: el.total_species, label: (el.total_species/1000).toFixed()+\"K\"}\r\n                        ]\r\n                    }\r\n                />\r\n                <Button onClick={() => handleSimilarityClick(el.city, el.state)} value={el.city} variant=\"outlined\" size=\"small\" color=\"primary\">\r\n                  Compare\r\n                </Button>\r\n            </Popup>\r\n          </Marker>\r\n        ));\r\n    } else if (stateMarker.view_status === \"city\" && stateMarker.city.length == 0)  {\r\n        return (\r\n            <div>\r\n                <Fab onClick={handleclick} size=\"small\" color=\"primary\" aria-label=\"add\" className={classes.scanMargin}>\r\n                    <AdjustIcon />\r\n                </Fab>\r\n                <Backdrop open={loading} className={classes.backdrop}>\r\n                    <CircularProgress color=\"inherit\" />\r\n                </Backdrop>\r\n            </div>\r\n        )\r\n    } else if (stateMarker.view_status === \"city\" && stateMarker.city.length > 0) {\r\n        console.log(\"Draw PixiOverlay\");\r\n        return (\r\n            <div>\r\n                <PixiOverlay markers={stateMarker.city} />\r\n                <Circle\r\n                    weight={1}\r\n                    opacity={0.5}\r\n                    fill={false}\r\n                    center={[scan_lat, scan_lng]}\r\n                    radius={1.5*scan_radius} />\r\n                <Fab onClick={handleclick} size=\"small\" color=\"primary\" aria-label=\"add\" className={classes.scanMargin}>\r\n                    <AdjustIcon />\r\n                </Fab>\r\n            </div>\r\n        )\r\n    } else {\r\n        return null\r\n    }\r\n};\r\n\r\nexport default GetMarkers;"]},"metadata":{},"sourceType":"module"}