{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Weilin\\\\Documents\\\\GitHub\\\\OnlineUrnGame\\\\app\\\\client\\\\src\\\\js\\\\components\\\\Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport Grid from '@material-ui/core/Grid';\nimport \"../../css/app.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getData, sendData } from \"../features/gameSlice\";\nimport TextField from '@material-ui/core/TextField';\nexport const Game = () => {\n  _s();\n\n  const dispatch = useDispatch(); // state\n\n  const gameState = useSelector(state => state.game); // Enter decision\n\n  function keyPress(e) {\n    if (e.keyCode === 13) {\n      if (e.target.value !== \"\") {\n        var id = e.target.id;\n        var text = e.target.value;\n        var room = gameState.room;\n        var endpoint = '/api/get/sendgame?player=' + id + \"&room=\" + room + \"&data=\" + text;\n        dispatch(sendData(endpoint));\n      }\n    }\n  } // Effects\n\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      dispatch(getData(\"/api/get/readgame?room=\" + gameState.room));\n    }, 2000);\n    return () => clearInterval(interval);\n  }, []); // render component\n\n  if (gameState.game_created == true) {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        align: \"center\",\n        xs: 3,\n        children: [\"Player1\", /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"player1\",\n          onKeyDown: keyPress,\n          label: \"Outlined\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        align: \"center\",\n        xs: 6,\n        children: [\"Game\", gameState.data.map((el, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: el.data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        align: \"center\",\n        xs: 3,\n        children: [\"Player2\", /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"player2\",\n          onKeyDown: keyPress,\n          label: \"Outlined\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      spacing: 2,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        align: \"center\",\n        xs: 12,\n        children: \"Create Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(Game, \"i1uH8FnuNPTJtr7/vp43AmTUyTs=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["C:/Users/Weilin/Documents/GitHub/OnlineUrnGame/app/client/src/js/components/Game.js"],"names":["React","useEffect","Grid","useSelector","useDispatch","getData","sendData","TextField","Game","dispatch","gameState","state","game","keyPress","e","keyCode","target","value","id","text","room","endpoint","interval","setInterval","clearInterval","game_created","data","map","el","i"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport \"../../css/app.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getData, sendData } from \"../features/gameSlice\";\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport const Game = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    // state\r\n    const gameState = useSelector(state => state.game);\r\n\r\n    // Enter decision\r\n    function keyPress(e) {\r\n        if(e.keyCode === 13){\r\n            if (e.target.value !== \"\") {\r\n                var id = e.target.id;\r\n                var text = e.target.value;\r\n                var room = gameState.room;\r\n                var endpoint = '/api/get/sendgame?player='+id+\"&room=\"+room+\"&data=\"+text;\r\n                dispatch(sendData(endpoint));\r\n            }\r\n        }\r\n    }\r\n\r\n    // Effects\r\n    useEffect(() => {\r\n      const interval = setInterval(() => {\r\n        dispatch(getData(\"/api/get/readgame?room=\"+gameState.room));\r\n      }, 2000);\r\n      return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    // render component\r\n    if (gameState.game_created == true) {\r\n        return (\r\n            <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\r\n                <Grid item align=\"center\" xs={3} >\r\n                    Player1\r\n                    <TextField id=\"player1\" onKeyDown={keyPress} label=\"Outlined\" variant=\"outlined\" />\r\n                </Grid>\r\n                <Grid item align=\"center\" xs={6} >\r\n                    Game\r\n                    {gameState.data.map((el, i) => (\r\n                        <p>{el.data}</p>\r\n                    ))}\r\n                </Grid>\r\n                <Grid item align=\"center\" xs={3} >\r\n                    Player2\r\n                    <TextField id=\"player2\" onKeyDown={keyPress} label=\"Outlined\" variant=\"outlined\" />\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    } else {\r\n        return(\r\n            <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\r\n                <Grid item align=\"center\" xs={12} >\r\n                    Create Game\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}