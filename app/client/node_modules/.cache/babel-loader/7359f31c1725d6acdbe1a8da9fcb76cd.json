{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Weilin\\\\Documents\\\\GitHub\\\\InsectTrade\\\\app\\\\client\\\\src\\\\js\\\\components\\\\Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport Loading from \"./Loading\";\nimport { MapContainer, TileLayer } from \"react-leaflet\";\nimport \"../../css/app.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getData } from \"../features/markerSlice\";\nexport const LeafMap = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const pathTwo = ['M', [50.54136296522163, 28.520507812500004], 'C', [52.214338608258224, 28.564453125000004], [48.45835188280866, 33.57421875000001], [50.680797145321655, 33.83789062500001], 'V', [48.40003249610685], 'L', [47.45839225859763, 31.201171875], [48.40003249610685, 28.564453125000004], 'Z', 'M', [49.55372551347579, 29.465332031250004], 'V', [48.7822260446217], 'H', [33.00292968750001], 'V', [49.55372551347579], 'Z']; // state\n\n  const stateMarker = useSelector(state => state.marker);\n  const stateMap = useSelector(state => state.map); // Effects\n\n  useEffect(() => {\n    dispatch(getData(stateMarker.endpoint));\n  }, [dispatch]); // render component\n\n  if (stateMarker.data.length > 0) {\n    return /*#__PURE__*/_jsxDEV(MapContainer, {\n      doubleClickZoom: false,\n      preferCanvas: true,\n      center: [stateMap.lat, stateMap.lng],\n      zoom: stateMap.zoom,\n      scrollWheelZoom: true,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [stateMap.lat, stateMap.lng],\n      zoom: stateMap.zoom,\n      scrollWheelZoom: true,\n      children: /*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(LeafMap, \"P4w/7haOUwmmnQlgE8olLhv4nIw=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = LeafMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeafMap\");","map":{"version":3,"sources":["C:/Users/Weilin/Documents/GitHub/InsectTrade/app/client/src/js/components/Map.js"],"names":["React","useEffect","Loading","MapContainer","TileLayer","useSelector","useDispatch","getData","LeafMap","dispatch","pathTwo","stateMarker","state","marker","stateMap","map","endpoint","data","length","lat","lng","zoom"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,YAAT,EAAuBC,SAAvB,QAAwC,eAAxC;AACA,OAAO,mBAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,yBAAxB;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACzB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AAEA,QAAMI,OAAO,GAAG,CAAC,GAAD,EAAM,CAAC,iBAAD,EAAoB,kBAApB,CAAN,EAClB,GADkB,EACb,CAAC,kBAAD,EAAqB,kBAArB,CADa,EAElB,CAAC,iBAAD,EAAoB,iBAApB,CAFkB,EAGlB,CAAC,kBAAD,EAAqB,iBAArB,CAHkB,EAIlB,GAJkB,EAIb,CAAC,iBAAD,CAJa,EAKlB,GALkB,EAKb,CAAC,iBAAD,EAAoB,YAApB,CALa,EAMlB,CAAC,iBAAD,EAAoB,kBAApB,CANkB,EAMuB,GANvB,EAOlB,GAPkB,EAOb,CAAC,iBAAD,EAAoB,kBAApB,CAPa,EAQlB,GARkB,EAQb,CAAC,gBAAD,CARa,EASlB,GATkB,EASb,CAAC,iBAAD,CATa,EAUlB,GAVkB,EAUb,CAAC,iBAAD,CAVa,EAUQ,GAVR,CAAhB,CAHyB,CAezB;;AACA,QAAMC,WAAW,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,MAAhB,CAA/B;AACA,QAAMC,QAAQ,GAAGT,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACG,GAAhB,CAA5B,CAjByB,CAmBzB;;AACAd,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,QAAQ,CAACF,OAAO,CAACI,WAAW,CAACK,QAAb,CAAR,CAAR;AACH,GAFQ,EAEN,CAACP,QAAD,CAFM,CAAT,CApByB,CAwBzB;;AACA,MAAIE,WAAW,CAACM,IAAZ,CAAiBC,MAAjB,GAA0B,CAA9B,EAAiC;AAC7B,wBACI,QAAC,YAAD;AAAc,MAAA,eAAe,EAAE,KAA/B;AAAsC,MAAA,YAAY,EAAE,IAApD;AAA0D,MAAA,MAAM,EAAE,CAACJ,QAAQ,CAACK,GAAV,EAAeL,QAAQ,CAACM,GAAxB,CAAlE;AACA,MAAA,IAAI,EAAEN,QAAQ,CAACO,IADf;AACqB,MAAA,eAAe,EAAE,IADtC;AAAA,8BAEE,QAAC,SAAD;AACE,QAAA,GAAG,EAAC;AADN;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH,GAVD,MAUO;AACH,wBACI,QAAC,YAAD;AAAc,MAAA,MAAM,EAAE,CAACP,QAAQ,CAACK,GAAV,EAAeL,QAAQ,CAACM,GAAxB,CAAtB;AAAoD,MAAA,IAAI,EAAEN,QAAQ,CAACO,IAAnE;AAAyE,MAAA,eAAe,EAAE,IAA1F;AAAA,6BACE,QAAC,SAAD;AACE,QAAA,GAAG,EAAC;AADN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;AAEJ,CA7CM;;GAAMb,O;UACQF,W,EAeGD,W,EACHA,W;;;KAjBRG,O","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport Loading from \"./Loading\";\r\nimport { MapContainer, TileLayer } from \"react-leaflet\";\r\nimport \"../../css/app.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getData } from \"../features/markerSlice\";\r\n\r\nexport const LeafMap = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const pathTwo = ['M', [50.54136296522163, 28.520507812500004],\r\n  'C', [52.214338608258224, 28.564453125000004],\r\n  [48.45835188280866, 33.57421875000001],\r\n  [50.680797145321655, 33.83789062500001],\r\n  'V', [48.40003249610685],\r\n  'L', [47.45839225859763, 31.201171875],\r\n  [48.40003249610685, 28.564453125000004], 'Z',\r\n  'M', [49.55372551347579, 29.465332031250004],\r\n  'V', [48.7822260446217],\r\n  'H', [33.00292968750001],\r\n  'V', [49.55372551347579], 'Z']\r\n\r\n    // state\r\n    const stateMarker = useSelector(state => state.marker);\r\n    const stateMap = useSelector(state => state.map);\r\n\r\n    // Effects\r\n    useEffect(() => {\r\n        dispatch(getData(stateMarker.endpoint));\r\n    }, [dispatch]);\r\n\r\n    // render component\r\n    if (stateMarker.data.length > 0) {\r\n        return (\r\n            <MapContainer doubleClickZoom={false} preferCanvas={true} center={[stateMap.lat, stateMap.lng]}\r\n            zoom={stateMap.zoom} scrollWheelZoom={true}>\r\n              <TileLayer\r\n                url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}\"\r\n              />\r\n              <Loading />\r\n            </MapContainer>\r\n        );\r\n    } else {\r\n        return (\r\n            <MapContainer center={[stateMap.lat, stateMap.lng]} zoom={stateMap.zoom} scrollWheelZoom={true}>\r\n              <TileLayer\r\n                url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}\"\r\n              />\r\n            </MapContainer>\r\n        );\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}