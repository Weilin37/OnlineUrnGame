{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from 'axios'; // Get New Game\n\nexport const createNewGame = createAsyncThunk(\"game/createNewGame\", async (endpoint, thunkAPI) => {\n  try {\n    const response = await axios.get(endpoint);\n    return response.data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue({\n      error: error.message\n    });\n  }\n}); // Get New Game\n\nexport const getNewGame = createAsyncThunk(\"game/getNewGame\", async (endpoint, thunkAPI) => {\n  try {\n    const response = await axios.get(endpoint);\n    return response.data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue({\n      error: error.message\n    });\n  }\n}); // Get Game Data\n\nexport const getData = createAsyncThunk(\"game/getData\", async (endpoint, thunkAPI) => {\n  try {\n    const response = await axios.get(endpoint);\n    return response.data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue({\n      error: error.message\n    });\n  }\n}); // Send Game Data\n\nexport const sendData = createAsyncThunk(\"game/sendData\", async (endpoint, thunkAPI) => {\n  try {\n    const response = await axios.get(endpoint);\n    return response.data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue({\n      error: error.message\n    });\n  }\n}); // CREATE SLICE\n\nconst gameSlice = createSlice({\n  name: \"game\",\n  initialState: {\n    data: [],\n    game_waiting_data: [],\n    game_created: false,\n    game_waiting: false,\n    room: ''\n  },\n  reducers: {\n    setEndpoint: (state, action) => {\n      state.endpoint = \"/api/get/readgame\";\n    }\n  },\n  extraReducers: builder => {\n    // getData\n    builder.addCase(getData.pending, state => {});\n    builder.addCase(getData.fulfilled, (state, {\n      payload\n    }) => {\n      state.data = payload;\n    });\n    builder.addCase(getData.rejected, (state, action) => {}); // get new game\n\n    builder.addCase(getData.pending, state => {});\n    builder.addCase(getData.fulfilled, (state, {\n      payload\n    }) => {\n      state.game_waiting_data = payload;\n    });\n    builder.addCase(getData.rejected, (state, action) => {});\n  }\n});\nexport const {\n  setEndpoint\n} = gameSlice.actions;\nexport default gameSlice;","map":{"version":3,"sources":["C:/Users/Weilin/Documents/GitHub/OnlineUrnGame/app/client/src/js/features/gameSlice.js"],"names":["createSlice","createAsyncThunk","axios","createNewGame","endpoint","thunkAPI","response","get","data","error","rejectWithValue","message","getNewGame","getData","sendData","gameSlice","name","initialState","game_waiting_data","game_created","game_waiting","room","reducers","setEndpoint","state","action","extraReducers","builder","addCase","pending","fulfilled","payload","rejected","actions"],"mappings":"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","sourcesContent":["import { createSlice,createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from 'axios';\r\n\r\n// Get New Game\r\nexport const createNewGame = createAsyncThunk(\"game/createNewGame\", async (endpoint, thunkAPI) => {\r\n    try {\r\n        const response = await axios.get(endpoint);\r\n        return response.data;\r\n    } catch (error) {\r\n         return thunkAPI.rejectWithValue({ error: error.message });\r\n    }\r\n});\r\n\r\n// Get New Game\r\nexport const getNewGame = createAsyncThunk(\"game/getNewGame\", async (endpoint, thunkAPI) => {\r\n    try {\r\n        const response = await axios.get(endpoint);\r\n        return response.data;\r\n    } catch (error) {\r\n         return thunkAPI.rejectWithValue({ error: error.message });\r\n    }\r\n});\r\n\r\n// Get Game Data\r\nexport const getData = createAsyncThunk(\"game/getData\", async (endpoint, thunkAPI) => {\r\n    try {\r\n        const response = await axios.get(endpoint);\r\n        return response.data;\r\n    } catch (error) {\r\n         return thunkAPI.rejectWithValue({ error: error.message });\r\n    }\r\n});\r\n\r\n// Send Game Data\r\nexport const sendData = createAsyncThunk(\"game/sendData\", async (endpoint, thunkAPI) => {\r\n    try {\r\n        const response = await axios.get(endpoint);\r\n        return response.data;\r\n    } catch (error) {\r\n         return thunkAPI.rejectWithValue({ error: error.message });\r\n    }\r\n});\r\n\r\n\r\n// CREATE SLICE\r\nconst gameSlice = createSlice({\r\n  name: \"game\",\r\n  initialState: {\r\n    data: [],\r\n    game_waiting_data: [],\r\n    game_created: false,\r\n    game_waiting: false,\r\n    room: '',\r\n  },\r\n  reducers: {\r\n    setEndpoint: (state, action) => {state.endpoint = \"/api/get/readgame\"},\r\n  },\r\n  extraReducers: (builder) => {\r\n    // getData\r\n    builder.addCase(getData.pending, (state) => {\r\n    });\r\n    builder.addCase(getData.fulfilled, (state, { payload }) => {\r\n        state.data = payload;\r\n    });\r\n    builder.addCase(getData.rejected,(state, action) => {\r\n    });\r\n\r\n    // get new game\r\n    builder.addCase(getData.pending, (state) => {\r\n    });\r\n    builder.addCase(getData.fulfilled, (state, { payload }) => {\r\n        state.game_waiting_data = payload;\r\n    });\r\n    builder.addCase(getData.rejected,(state, action) => {\r\n    });\r\n  }\r\n});\r\n\r\nexport const { setEndpoint } = gameSlice.actions;\r\n\r\nexport default gameSlice"]},"metadata":{},"sourceType":"module"}