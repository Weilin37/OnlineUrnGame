{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useLeaflet } from \"react-leaflet\";\nimport L from 'leaflet';\nimport '@elfalem/leaflet-curve';\n\nconst Arches = () => {\n  _s();\n\n  const {\n    map\n  } = useLeaflet();\n  const stateMarker = useSelector(state => state.marker);\n  var path = L.curve(['M', [50.54136296522163, 28.520507812500004], 'C', [52.214338608258224, 28.564453125000004], [48.45835188280866, 33.57421875000001], [50.680797145321655, 33.83789062500001], 'V', [48.40003249610685], 'L', [47.45839225859763, 31.201171875], [48.40003249610685, 28.564453125000004], 'Z'], {\n    color: 'red',\n    fill: true\n  }).addTo(map);\n  console.log(\"test\");\n  console.log(map);\n  return null;\n};\n\n_s(Arches, \"MSwarOdHxI5QI54a703war+9GWw=\", true, function () {\n  return [useLeaflet];\n});\n\n_c = Arches;\nexport default Arches;\n\nvar _c;\n\n$RefreshReg$(_c, \"Arches\");","map":{"version":3,"sources":["C:/Users/Weilin/Documents/GitHub/InsectTrade/app/client/src/js/components/Arches.js"],"names":["useLeaflet","L","Arches","map","stateMarker","useSelector","state","marker","path","curve","color","fill","addTo","console","log"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,OAAOC,CAAP,MAAc,SAAd;AACA,OAAO,wBAAP;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM;AAAEC,IAAAA;AAAF,MAAUH,UAAU,EAA1B;AACA,QAAMI,WAAW,GAAGC,WAAW,CAACC,KAAK,IAAIA,KAAK,CAACC,MAAhB,CAA/B;AAEA,MAAIC,IAAI,GAAGP,CAAC,CAACQ,KAAF,CAAQ,CAAC,GAAD,EAAK,CAAC,iBAAD,EAAmB,kBAAnB,CAAL,EAClB,GADkB,EACd,CAAC,kBAAD,EAAoB,kBAApB,CADc,EAEjB,CAAC,iBAAD,EAAmB,iBAAnB,CAFiB,EAGjB,CAAC,kBAAD,EAAoB,iBAApB,CAHiB,EAIlB,GAJkB,EAId,CAAC,iBAAD,CAJc,EAKlB,GALkB,EAKd,CAAC,iBAAD,EAAmB,YAAnB,CALc,EAMjB,CAAC,iBAAD,EAAmB,kBAAnB,CANiB,EAMsB,GANtB,CAAR,EAOV;AAACC,IAAAA,KAAK,EAAC,KAAP;AAAaC,IAAAA,IAAI,EAAC;AAAlB,GAPU,EAOeC,KAPf,CAOqBT,GAPrB,CAAX;AASAU,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYX,GAAZ;AAEA,SAAO,IAAP;AAEH,CAlBD;;GAAMD,M;UACcF,U;;;KADdE,M;AAoBN,eAAeA,MAAf","sourcesContent":["import { useLeaflet } from \"react-leaflet\";\r\nimport L from 'leaflet'\r\nimport '@elfalem/leaflet-curve'\r\n\r\nconst Arches = () => {\r\n    const { map } = useLeaflet();\r\n    const stateMarker = useSelector(state => state.marker);\r\n\r\n    var path = L.curve(['M',[50.54136296522163,28.520507812500004],\r\n\t\t\t\t\t'C',[52.214338608258224,28.564453125000004],\r\n\t\t\t\t\t\t[48.45835188280866,33.57421875000001],\r\n\t\t\t\t\t\t[50.680797145321655,33.83789062500001],\r\n\t\t\t\t\t'V',[48.40003249610685],\r\n\t\t\t\t\t'L',[47.45839225859763,31.201171875],\r\n\t\t\t\t\t\t[48.40003249610685,28.564453125000004],'Z'],\r\n\t\t\t\t\t{color:'red',fill:true}).addTo(map);\r\n\r\n    console.log(\"test\")\r\n    console.log(map);\r\n\r\n    return null\r\n\r\n}\r\n\r\nexport default Arches;"]},"metadata":{},"sourceType":"module"}