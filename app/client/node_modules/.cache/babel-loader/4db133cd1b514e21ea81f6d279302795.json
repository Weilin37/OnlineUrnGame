{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from 'axios'; // Get New Game\n\nexport const createNewGame = createAsyncThunk(\"game/createNewGame\", async (endpoint, thunkAPI) => {\n  try {\n    const response = await axios.get(endpoint);\n    return response.data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue({\n      error: error.message\n    });\n  }\n}); // Get New Game\n\nexport const getNewGame = createAsyncThunk(\"game/getNewGame\", async (endpoint, thunkAPI) => {\n  try {\n    const response = await axios.get(endpoint);\n    return response.data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue({\n      error: error.message\n    });\n  }\n}); // Get Game Data\n\nexport const getData = createAsyncThunk(\"game/getData\", async (endpoint, thunkAPI) => {\n  try {\n    const response = await axios.get(endpoint);\n    return response.data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue({\n      error: error.message\n    });\n  }\n}); // Send Game Data\n\nexport const sendData = createAsyncThunk(\"game/sendData\", async (endpoint, thunkAPI) => {\n  try {\n    const response = await axios.get(endpoint);\n    return response.data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue({\n      error: error.message\n    });\n  }\n}); // CREATE SLICE\n\nconst gameSlice = createSlice({\n  name: \"game\",\n  initialState: {\n    data: [],\n    game_waiting_data: [],\n    game_created: false,\n    game_waiting: false,\n    alias: '',\n    player: '',\n    room: ''\n  },\n  reducers: {\n    setAlias: (state, action) => {\n      state.alias = action.payload;\n    },\n    setPlayer: (state, action) => {\n      state.player = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    // getData\n    builder.addCase(getData.fulfilled, (state, {\n      payload\n    }) => {\n      state.data = payload;\n    }); // get new game\n\n    builder.addCase(getNewGame.fulfilled, (state, {\n      payload\n    }) => {\n      state.game_waiting_data = payload;\n      console.log(payload);\n\n      if (payload.length > 0) {\n        state.room = payload[0]['room'];\n      }\n    });\n  }\n});\nexport const {\n  setAlias,\n  setPlayer\n} = gameSlice.actions;\nexport default gameSlice;","map":{"version":3,"sources":["C:/Users/Weilin/Documents/GitHub/OnlineUrnGame/app/client/src/js/features/gameSlice.js"],"names":["createSlice","createAsyncThunk","axios","createNewGame","endpoint","thunkAPI","response","get","data","error","rejectWithValue","message","getNewGame","getData","sendData","gameSlice","name","initialState","game_waiting_data","game_created","game_waiting","alias","player","room","reducers","setAlias","state","action","payload","setPlayer","extraReducers","builder","addCase","fulfilled","console","log","length","actions"],"mappings":"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","sourcesContent":["import { createSlice,createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from 'axios';\r\n\r\n// Get New Game\r\nexport const createNewGame = createAsyncThunk(\"game/createNewGame\", async (endpoint, thunkAPI) => {\r\n    try {\r\n        const response = await axios.get(endpoint);\r\n        return response.data;\r\n    } catch (error) {\r\n         return thunkAPI.rejectWithValue({ error: error.message });\r\n    }\r\n});\r\n\r\n// Get New Game\r\nexport const getNewGame = createAsyncThunk(\"game/getNewGame\", async (endpoint, thunkAPI) => {\r\n    try {\r\n        const response = await axios.get(endpoint);\r\n        return response.data;\r\n    } catch (error) {\r\n         return thunkAPI.rejectWithValue({ error: error.message });\r\n    }\r\n});\r\n\r\n// Get Game Data\r\nexport const getData = createAsyncThunk(\"game/getData\", async (endpoint, thunkAPI) => {\r\n    try {\r\n        const response = await axios.get(endpoint);\r\n        return response.data;\r\n    } catch (error) {\r\n         return thunkAPI.rejectWithValue({ error: error.message });\r\n    }\r\n});\r\n\r\n// Send Game Data\r\nexport const sendData = createAsyncThunk(\"game/sendData\", async (endpoint, thunkAPI) => {\r\n    try {\r\n        const response = await axios.get(endpoint);\r\n        return response.data;\r\n    } catch (error) {\r\n         return thunkAPI.rejectWithValue({ error: error.message });\r\n    }\r\n});\r\n\r\n\r\n// CREATE SLICE\r\nconst gameSlice = createSlice({\r\n  name: \"game\",\r\n  initialState: {\r\n    data: [],\r\n    game_waiting_data: [],\r\n    game_created: false,\r\n    game_waiting: false,\r\n    alias: '',\r\n    player: '',\r\n    room: '',\r\n  },\r\n  reducers: {\r\n    setAlias: (state, action) => {state.alias = action.payload},\r\n    setPlayer: (state, action) => {state.player = action.payload},\r\n  },\r\n  extraReducers: (builder) => {\r\n    // getData\r\n    builder.addCase(getData.fulfilled, (state, { payload }) => {\r\n        state.data = payload;\r\n    });\r\n\r\n    // get new game\r\n    builder.addCase(getNewGame.fulfilled, (state, { payload }) => {\r\n        state.game_waiting_data = payload;\r\n        console.log(payload);\r\n        if (payload.length > 0) {state.room = payload[0]['room']}\r\n    });\r\n  }\r\n});\r\n\r\nexport const { setAlias, setPlayer } = gameSlice.actions;\r\n\r\nexport default gameSlice"]},"metadata":{},"sourceType":"module"}