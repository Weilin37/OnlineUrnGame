{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from 'axios'; // CREATE Thunk\n\nexport const getData = createAsyncThunk(\"game/getData\", async (endpoint, thunkAPI) => {\n  try {\n    const response = await axios.get(endpoint);\n    return response.data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue({\n      error: error.message\n    });\n  }\n}); // CREATE Thunk\n\nexport const sendData = createAsyncThunk(\"game/sendData\", async (endpoint, thunkAPI) => {\n  try {\n    const response = await axios.get(endpoint);\n    return response.data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue({\n      error: error.message\n    });\n  }\n}); // CREATE SLICE\n\nconst gameSlice = createSlice({\n  name: \"game\",\n  initialState: {\n    data: [],\n    player1turn: true,\n    player2turn: false,\n    endpoint: \"/api/get/data\"\n  },\n  reducers: {\n    setEndpoint: (state, action) => {\n      state.endpoint = \"/api/get/readgame\";\n    }\n  },\n  extraReducers: builder => {\n    // global\n    builder.addCase(getData.pending, state => {\n      state.data = [];\n    });\n    builder.addCase(getData.fulfilled, (state, {\n      payload\n    }) => {\n      state.data = payload;\n    });\n    builder.addCase(getData.rejected, (state, action) => {\n      state.loading = false;\n    });\n  }\n});\nexport const {\n  setEndpoint\n} = gameSlice.actions;\nexport default gameSlice;","map":{"version":3,"sources":["C:/Users/Weilin/Documents/GitHub/OnlineUrnGame/app/client/src/js/features/gameSlice.js"],"names":["createSlice","createAsyncThunk","axios","getData","endpoint","thunkAPI","response","get","data","error","rejectWithValue","message","sendData","gameSlice","name","initialState","player1turn","player2turn","reducers","setEndpoint","state","action","extraReducers","builder","addCase","pending","fulfilled","payload","rejected","loading","actions"],"mappings":"AAAA,SAASA,WAAT,EAAqBC,gBAArB,QAA6C,kBAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,MAAMC,OAAO,GAAGF,gBAAgB,CAAC,cAAD,EAAiB,OAAOG,QAAP,EAAiBC,QAAjB,KAA8B;AAClF,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAUH,QAAV,CAAvB;AACA,WAAOE,QAAQ,CAACE,IAAhB;AACH,GAHD,CAGE,OAAOC,KAAP,EAAc;AACX,WAAOJ,QAAQ,CAACK,eAAT,CAAyB;AAAED,MAAAA,KAAK,EAAEA,KAAK,CAACE;AAAf,KAAzB,CAAP;AACJ;AACJ,CAPsC,CAAhC,C,CASP;;AACA,OAAO,MAAMC,QAAQ,GAAGX,gBAAgB,CAAC,eAAD,EAAkB,OAAOG,QAAP,EAAiBC,QAAjB,KAA8B;AACpF,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAUH,QAAV,CAAvB;AACA,WAAOE,QAAQ,CAACE,IAAhB;AACH,GAHD,CAGE,OAAOC,KAAP,EAAc;AACX,WAAOJ,QAAQ,CAACK,eAAT,CAAyB;AAAED,MAAAA,KAAK,EAAEA,KAAK,CAACE;AAAf,KAAzB,CAAP;AACJ;AACJ,CAPuC,CAAjC,C,CAUP;;AACA,MAAME,SAAS,GAAGb,WAAW,CAAC;AAC5Bc,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAE;AACZP,IAAAA,IAAI,EAAE,EADM;AAEZQ,IAAAA,WAAW,EAAE,IAFD;AAGZC,IAAAA,WAAW,EAAE,KAHD;AAIZb,IAAAA,QAAQ,EAAE;AAJE,GAFc;AAQ5Bc,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WAAW,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAACD,MAAAA,KAAK,CAAChB,QAAN,GAAiB,mBAAjB;AAAqC;AAD9D,GARkB;AAW5BkB,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1B;AACAA,IAAAA,OAAO,CAACC,OAAR,CAAgBrB,OAAO,CAACsB,OAAxB,EAAkCL,KAAD,IAAW;AACxCA,MAAAA,KAAK,CAACZ,IAAN,GAAa,EAAb;AACH,KAFD;AAGAe,IAAAA,OAAO,CAACC,OAAR,CAAgBrB,OAAO,CAACuB,SAAxB,EAAmC,CAACN,KAAD,EAAQ;AAAEO,MAAAA;AAAF,KAAR,KAAwB;AACvDP,MAAAA,KAAK,CAACZ,IAAN,GAAamB,OAAb;AACH,KAFD;AAGAJ,IAAAA,OAAO,CAACC,OAAR,CAAgBrB,OAAO,CAACyB,QAAxB,EAAiC,CAACR,KAAD,EAAQC,MAAR,KAAmB;AAChDD,MAAAA,KAAK,CAACS,OAAN,GAAgB,KAAhB;AACH,KAFD;AAGD;AAtB2B,CAAD,CAA7B;AAyBA,OAAO,MAAM;AAAEV,EAAAA;AAAF,IAAkBN,SAAS,CAACiB,OAAlC;AAEP,eAAejB,SAAf","sourcesContent":["import { createSlice,createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from 'axios';\r\n\r\n// CREATE Thunk\r\nexport const getData = createAsyncThunk(\"game/getData\", async (endpoint, thunkAPI) => {\r\n    try {\r\n        const response = await axios.get(endpoint);\r\n        return response.data;\r\n    } catch (error) {\r\n         return thunkAPI.rejectWithValue({ error: error.message });\r\n    }\r\n});\r\n\r\n// CREATE Thunk\r\nexport const sendData = createAsyncThunk(\"game/sendData\", async (endpoint, thunkAPI) => {\r\n    try {\r\n        const response = await axios.get(endpoint);\r\n        return response.data;\r\n    } catch (error) {\r\n         return thunkAPI.rejectWithValue({ error: error.message });\r\n    }\r\n});\r\n\r\n\r\n// CREATE SLICE\r\nconst gameSlice = createSlice({\r\n  name: \"game\",\r\n  initialState: {\r\n    data: [],\r\n    player1turn: true,\r\n    player2turn: false,\r\n    endpoint: \"/api/get/data\",\r\n  },\r\n  reducers: {\r\n    setEndpoint: (state, action) => {state.endpoint = \"/api/get/readgame\"},\r\n  },\r\n  extraReducers: (builder) => {\r\n    // global\r\n    builder.addCase(getData.pending, (state) => {\r\n        state.data = [];\r\n    });\r\n    builder.addCase(getData.fulfilled, (state, { payload }) => {\r\n        state.data = payload;\r\n    });\r\n    builder.addCase(getData.rejected,(state, action) => {\r\n        state.loading = false;\r\n    });\r\n  }\r\n});\r\n\r\nexport const { setEndpoint } = gameSlice.actions;\r\n\r\nexport default gameSlice"]},"metadata":{},"sourceType":"module"}