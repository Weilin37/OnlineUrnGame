{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Weilin\\\\Documents\\\\GitHub\\\\UrbanTreeConservation\\\\client\\\\src\\\\js\\\\components\\\\FreeDrawCustom.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport Freedraw from 'react-leaflet-freedraw';\nimport \"../../css/freedraw.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { clearFreeDraw, setScanStatus, getFreeDraw } from \"../features/markerSlice\";\nimport { useLeaflet } from \"react-leaflet\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Fab from '@material-ui/core/Fab';\nimport FilterCenterFocusIcon from '@material-ui/icons/FilterCenterFocus';\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport { ALL, DELETE, NONE } from 'react-leaflet-freedraw';\nconst useStyles = makeStyles(theme => ({\n  freeDrawMargin: {\n    margin: theme.spacing(1),\n    top: theme.spacing(16),\n    left: theme.spacing(1),\n    position: 'fixed',\n    zIndex: 1000\n  },\n  selectMargin: {\n    margin: theme.spacing(1),\n    top: theme.spacing(22),\n    left: theme.spacing(1),\n    position: 'fixed',\n    zIndex: 1000\n  },\n  deleteMargin: {\n    margin: theme.spacing(1),\n    top: theme.spacing(28),\n    left: theme.spacing(1),\n    position: 'fixed',\n    zIndex: 1000\n  }\n})); // Custom map components\n\nconst FreeDrawCustom = () => {\n  _s();\n\n  const [drawMode, setDrawMode] = useState(NONE);\n  const [endpoint, setEndpoint] = useState();\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const {\n    map\n  } = useLeaflet();\n  const freeDrawRef = useRef(null);\n  const stateMarker = useSelector(state => state.marker);\n  const center = map.getCenter();\n  const lat = center.lat;\n  const lng = center.lng;\n  const bounds = map.getBounds();\n  const latNE = bounds['_northEast'].lat;\n  const lngNE = bounds['_northEast'].lng;\n  const radius = Math.round(getDistance([latNE, lngNE], [lat, lng]));\n\n  function toRadian(degree) {\n    return degree * Math.PI / 180;\n  }\n\n  function getDistance(origin, destination) {\n    // return distance in meters\n    var lon1 = toRadian(origin[1]),\n        lat1 = toRadian(origin[0]),\n        lon2 = toRadian(destination[1]),\n        lat2 = toRadian(destination[0]);\n    var deltaLat = lat2 - lat1;\n    var deltaLon = lon2 - lon1;\n    var a = Math.pow(Math.sin(deltaLat / 2), 2) + Math.cos(lat1) * Math.cos(lat2) * Math.pow(Math.sin(deltaLon / 2), 2);\n    var c = 2 * Math.asin(Math.sqrt(a));\n    var EARTH_RADIUS = 6371;\n    return c * EARTH_RADIUS * 1000;\n  } // Listen for any markers added, removed or edited, and then output the lat lng boundaries.\n\n\n  function handleOnMarkers(e) {\n    if (e.latLngs.length > 0) {\n      const coordinates = e.latLngs[0];\n      console.log(coordinates);\n      let polygonArray = [];\n\n      for (var i = 0; i < coordinates.length; i++) {\n        let lng = coordinates[i].lng;\n        let lat = coordinates[i].lat;\n        let string = lng + ' ' + lat;\n        polygonArray.push(string);\n      }\n\n      polygonArray.push(coordinates[0].lng + ' ' + coordinates[0].lat);\n      let polygonString = polygonArray.join(','); //dispatch(setEndpoint({type:\"freedraw\", polygons:polygonString, lat:lat, lng:lng, radius:radius}));\n\n      setEndpoint(\"/api/get/freedraw?lat=\" + lat + \"&lng=\" + lng + \"&radius=\" + radius + \"&polygons=\" + polygonString);\n    } else if (e.latLngs.length === 0) {\n      console.log(\"clearing free draw\");\n      dispatch(clearFreeDraw());\n    }\n  }\n\n  ;\n\n  function handleModeChange(e) {\n    console.log('mode changed', e.mode);\n\n    if (e.mode === 10 && drawMode !== 10) {\n      setDrawMode(10);\n    }\n  }\n\n  ;\n\n  function handleSwitchClick(e) {\n    setDrawMode(ALL ^ DELETE);\n  }\n\n  function getMarkers(e) {\n    if (endpoint.length > 0) {\n      //dispatch(setScanStatus(\"freedraw scanning\"));\n      dispatch(getFreeDraw(endpoint));\n      setDrawMode(NONE);\n    }\n  }\n\n  function handleDeleteClick(e) {\n    e.clear();\n    setDrawMode(DELETE);\n  }\n\n  if (stateMarker.view_status === \"city\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Fab, {\n        onClick: handleSwitchClick,\n        className: classes.freeDrawMargin,\n        size: \"small\",\n        color: \"primary\",\n        \"aria-label\": \"add\",\n        children: /*#__PURE__*/_jsxDEV(BorderColorIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Fab, {\n        onClick: getMarkers,\n        className: classes.selectMargin,\n        size: \"small\",\n        color: \"primary\",\n        \"aria-label\": \"add\",\n        children: /*#__PURE__*/_jsxDEV(FilterCenterFocusIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Fab, {\n        onClick: handleDeleteClick,\n        className: classes.deleteMargin,\n        size: \"small\",\n        color: \"secondary\",\n        \"aria-label\": \"add\",\n        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Freedraw, {\n        mode: drawMode,\n        onMarkers: handleOnMarkers,\n        onModeChange: handleModeChange,\n        simplifyFactor: 2,\n        ref: freeDrawRef,\n        leaveModeAfterCreate: true,\n        maximumPolygons: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this);\n  } else {\n    return null;\n  }\n};\n\n_s(FreeDrawCustom, \"9jQ8G69XijBaX+CcqV3/FFhV+tM=\", false, function () {\n  return [useStyles, useDispatch, useLeaflet, useSelector];\n});\n\n_c = FreeDrawCustom;\nexport default FreeDrawCustom;\n\nvar _c;\n\n$RefreshReg$(_c, \"FreeDrawCustom\");","map":{"version":3,"sources":["C:/Users/Weilin/Documents/GitHub/UrbanTreeConservation/client/src/js/components/FreeDrawCustom.js"],"names":["React","useRef","useState","Freedraw","useSelector","useDispatch","clearFreeDraw","setScanStatus","getFreeDraw","useLeaflet","makeStyles","DeleteIcon","Fab","FilterCenterFocusIcon","BorderColorIcon","ALL","DELETE","NONE","useStyles","theme","freeDrawMargin","margin","spacing","top","left","position","zIndex","selectMargin","deleteMargin","FreeDrawCustom","drawMode","setDrawMode","endpoint","setEndpoint","classes","dispatch","map","freeDrawRef","stateMarker","state","marker","center","getCenter","lat","lng","bounds","getBounds","latNE","lngNE","radius","Math","round","getDistance","toRadian","degree","PI","origin","destination","lon1","lat1","lon2","lat2","deltaLat","deltaLon","a","pow","sin","cos","c","asin","sqrt","EARTH_RADIUS","handleOnMarkers","e","latLngs","length","coordinates","console","log","polygonArray","i","string","push","polygonString","join","handleModeChange","mode","handleSwitchClick","getMarkers","handleDeleteClick","clear","view_status"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from \"react\";\r\nimport Freedraw from 'react-leaflet-freedraw';\r\nimport \"../../css/freedraw.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { clearFreeDraw, setScanStatus, getFreeDraw } from \"../features/markerSlice\";\r\nimport { useLeaflet } from \"react-leaflet\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport FilterCenterFocusIcon from '@material-ui/icons/FilterCenterFocus';\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport { ALL, DELETE, NONE } from 'react-leaflet-freedraw';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  freeDrawMargin: {\r\n    margin: theme.spacing(1),\r\n    top: theme.spacing(16),\r\n    left: theme.spacing(1),\r\n    position: 'fixed',\r\n    zIndex: 1000,\r\n  },\r\n  selectMargin: {\r\n    margin: theme.spacing(1),\r\n    top: theme.spacing(22),\r\n    left: theme.spacing(1),\r\n    position: 'fixed',\r\n    zIndex: 1000,\r\n  },\r\n  deleteMargin: {\r\n    margin: theme.spacing(1),\r\n    top: theme.spacing(28),\r\n    left: theme.spacing(1),\r\n    position: 'fixed',\r\n    zIndex: 1000,\r\n  }\r\n}));\r\n\r\n// Custom map components\r\nconst FreeDrawCustom = () => {\r\n    const [drawMode, setDrawMode] = useState(NONE);\r\n    const [endpoint, setEndpoint] = useState();\r\n\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const { map } = useLeaflet();\r\n\r\n    const freeDrawRef = useRef(null);\r\n    const stateMarker = useSelector(state => state.marker);\r\n\r\n    const center = map.getCenter();\r\n    const lat = center.lat;\r\n    const lng = center.lng;\r\n    const bounds = map.getBounds();\r\n    const latNE = bounds['_northEast'].lat\r\n    const lngNE = bounds['_northEast'].lng\r\n    const radius = Math.round(getDistance([latNE, lngNE],[lat, lng]));\r\n\r\n    function toRadian(degree) {\r\n        return degree*Math.PI/180;\r\n    }\r\n\r\n    function getDistance(origin, destination) {\r\n        // return distance in meters\r\n        var lon1 = toRadian(origin[1]),\r\n            lat1 = toRadian(origin[0]),\r\n            lon2 = toRadian(destination[1]),\r\n            lat2 = toRadian(destination[0]);\r\n\r\n        var deltaLat = lat2 - lat1;\r\n        var deltaLon = lon2 - lon1;\r\n\r\n        var a = Math.pow(Math.sin(deltaLat/2), 2) + Math.cos(lat1) * Math.cos(lat2) * Math.pow(Math.sin(deltaLon/2), 2);\r\n        var c = 2 * Math.asin(Math.sqrt(a));\r\n        var EARTH_RADIUS = 6371;\r\n        return c * EARTH_RADIUS * 1000;\r\n    }\r\n\r\n    // Listen for any markers added, removed or edited, and then output the lat lng boundaries.\r\n    function handleOnMarkers(e) {\r\n        if (e.latLngs.length > 0){\r\n            const coordinates = e.latLngs[0];\r\n            console.log(coordinates);\r\n            let polygonArray = [];\r\n            for (var i = 0; i<coordinates.length; i++) {\r\n                let lng = coordinates[i].lng;\r\n                let lat = coordinates[i].lat;\r\n                let string = lng+' '+lat;\r\n                polygonArray.push(string);\r\n            }\r\n            polygonArray.push(coordinates[0].lng+' '+coordinates[0].lat);\r\n\r\n            let polygonString = polygonArray.join(',');\r\n            //dispatch(setEndpoint({type:\"freedraw\", polygons:polygonString, lat:lat, lng:lng, radius:radius}));\r\n            setEndpoint(\"/api/get/freedraw?lat=\"+lat+\"&lng=\"+lng+\"&radius=\"+radius+\"&polygons=\"+polygonString);\r\n        }\r\n        else if (e.latLngs.length === 0) {\r\n            console.log(\"clearing free draw\");\r\n            dispatch(clearFreeDraw());\r\n        }\r\n    };\r\n\r\n    function handleModeChange(e) {\r\n        console.log('mode changed', e.mode);\r\n        if (e.mode === 10 && drawMode !== 10) {\r\n            setDrawMode(10);\r\n        }\r\n    };\r\n\r\n    function handleSwitchClick(e) {\r\n        setDrawMode(ALL ^ DELETE);\r\n    }\r\n\r\n    function getMarkers(e) {\r\n        if (endpoint.length > 0) {\r\n            //dispatch(setScanStatus(\"freedraw scanning\"));\r\n            dispatch(getFreeDraw(endpoint));\r\n            setDrawMode(NONE);\r\n        }\r\n    }\r\n\r\n    function handleDeleteClick(e) {\r\n        e.clear();\r\n        setDrawMode(DELETE);\r\n    }\r\n\r\n    if (stateMarker.view_status === \"city\")  {\r\n        return (\r\n            <div>\r\n                <Fab onClick={handleSwitchClick} className={classes.freeDrawMargin} size=\"small\" color=\"primary\" aria-label=\"add\">\r\n                    <BorderColorIcon />\r\n                </Fab>\r\n                <Fab onClick={getMarkers} className={classes.selectMargin} size=\"small\" color=\"primary\" aria-label=\"add\">\r\n                    <FilterCenterFocusIcon />\r\n                </Fab>\r\n                <Fab onClick={handleDeleteClick} className={classes.deleteMargin} size=\"small\" color=\"secondary\" aria-label=\"add\">\r\n                    <DeleteIcon />\r\n                </Fab>\r\n                <Freedraw\r\n                  mode={drawMode}\r\n                  onMarkers={handleOnMarkers}\r\n                  onModeChange={handleModeChange}\r\n                  simplifyFactor={2}\r\n                  ref={freeDrawRef}\r\n                  leaveModeAfterCreate={true}\r\n                  maximumPolygons={1}\r\n                />\r\n            </div>\r\n        )\r\n    } else {\r\n        return null\r\n    }\r\n\r\n}\r\n\r\nexport default FreeDrawCustom;"]},"metadata":{},"sourceType":"module"}