{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Weilin\\\\Documents\\\\GitHub\\\\InsectTrade\\\\app\\\\client\\\\src\\\\js\\\\components\\\\Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport Loading from \"./Loading\";\nimport { MapContainer, TileLayer } from \"react-leaflet\";\nimport \"../../css/app.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getData } from \"../features/markerSlice\";\nimport { VenueLocationIcon } from './VenueLocationIcon';\nexport const LeafMap = () => {\n  _s();\n\n  const dispatch = useDispatch(); // state\n\n  const stateMarker = useSelector(state => state.marker);\n  const stateMap = useSelector(state => state.map); // Effects\n\n  useEffect(() => {\n    dispatch(getData(stateMarker.endpoint));\n  }, [dispatch]); // render component\n\n  if (stateMarker.data.length > 0) {\n    return /*#__PURE__*/_jsxDEV(MapContainer, {\n      doubleClickZoom: false,\n      preferCanvas: true,\n      center: [stateMap.lat, stateMap.lng],\n      zoom: stateMap.zoom,\n      scrollWheelZoom: true,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [stateMap.lat, stateMap.lng],\n      zoom: stateMap.zoom,\n      scrollWheelZoom: true,\n      children: /*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(LeafMap, \"P4w/7haOUwmmnQlgE8olLhv4nIw=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = LeafMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeafMap\");","map":{"version":3,"sources":["C:/Users/Weilin/Documents/GitHub/InsectTrade/app/client/src/js/components/Map.js"],"names":["React","useEffect","Loading","MapContainer","TileLayer","useSelector","useDispatch","getData","VenueLocationIcon","LeafMap","dispatch","stateMarker","state","marker","stateMap","map","endpoint","data","length","lat","lng","zoom"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,YAAT,EAAuBC,SAAvB,QAAwC,eAAxC;AACA,OAAO,mBAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,SAAQC,iBAAR,QAAgC,qBAAhC;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACzB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B,CADyB,CAGzB;;AACA,QAAMK,WAAW,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,MAAhB,CAA/B;AACA,QAAMC,QAAQ,GAAGT,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACG,GAAhB,CAA5B,CALyB,CAOzB;;AACAd,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,QAAQ,CAACH,OAAO,CAACI,WAAW,CAACK,QAAb,CAAR,CAAR;AACH,GAFQ,EAEN,CAACN,QAAD,CAFM,CAAT,CARyB,CAYzB;;AACA,MAAIC,WAAW,CAACM,IAAZ,CAAiBC,MAAjB,GAA0B,CAA9B,EAAiC;AAC7B,wBACI,QAAC,YAAD;AAAc,MAAA,eAAe,EAAE,KAA/B;AAAsC,MAAA,YAAY,EAAE,IAApD;AAA0D,MAAA,MAAM,EAAE,CAACJ,QAAQ,CAACK,GAAV,EAAeL,QAAQ,CAACM,GAAxB,CAAlE;AACA,MAAA,IAAI,EAAEN,QAAQ,CAACO,IADf;AACqB,MAAA,eAAe,EAAE,IADtC;AAAA,8BAEE,QAAC,SAAD;AACE,QAAA,GAAG,EAAC;AADN;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH,GAVD,MAUO;AACH,wBACI,QAAC,YAAD;AAAc,MAAA,MAAM,EAAE,CAACP,QAAQ,CAACK,GAAV,EAAeL,QAAQ,CAACM,GAAxB,CAAtB;AAAoD,MAAA,IAAI,EAAEN,QAAQ,CAACO,IAAnE;AAAyE,MAAA,eAAe,EAAE,IAA1F;AAAA,6BACE,QAAC,SAAD;AACE,QAAA,GAAG,EAAC;AADN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;AAEJ,CAjCM;;GAAMZ,O;UACQH,W,EAGGD,W,EACHA,W;;;KALRI,O","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport Loading from \"./Loading\";\r\nimport { MapContainer, TileLayer } from \"react-leaflet\";\r\nimport \"../../css/app.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getData } from \"../features/markerSlice\";\r\nimport {VenueLocationIcon} from './VenueLocationIcon';\r\n\r\nexport const LeafMap = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    // state\r\n    const stateMarker = useSelector(state => state.marker);\r\n    const stateMap = useSelector(state => state.map);\r\n\r\n    // Effects\r\n    useEffect(() => {\r\n        dispatch(getData(stateMarker.endpoint));\r\n    }, [dispatch]);\r\n\r\n    // render component\r\n    if (stateMarker.data.length > 0) {\r\n        return (\r\n            <MapContainer doubleClickZoom={false} preferCanvas={true} center={[stateMap.lat, stateMap.lng]}\r\n            zoom={stateMap.zoom} scrollWheelZoom={true}>\r\n              <TileLayer\r\n                url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}\"\r\n              />\r\n              <Loading />\r\n            </MapContainer>\r\n        );\r\n    } else {\r\n        return (\r\n            <MapContainer center={[stateMap.lat, stateMap.lng]} zoom={stateMap.zoom} scrollWheelZoom={true}>\r\n              <TileLayer\r\n                url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}\"\r\n              />\r\n            </MapContainer>\r\n        );\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}