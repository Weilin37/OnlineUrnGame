{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Weilin\\\\Documents\\\\GitHub\\\\UrbanTreeConservation\\\\client\\\\src\\\\js\\\\components\\\\DataViewButtons.js\",\n    _s = $RefreshSig$();\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch, useSelector, batch } from \"react-redux\";\nimport { setViewStatus } from \"../features/markerSlice\";\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Paper from '@material-ui/core/Paper';\nimport { useLeaflet } from \"react-leaflet\";\nimport { setDrawMode } from \"../features/mapSlice\";\nimport { NONE } from 'react-leaflet-freedraw';\nconst useStyles = makeStyles(theme => ({\n  dataViewMargin: {\n    margin: theme.spacing(1),\n    bottom: theme.spacing(1),\n    left: theme.spacing(1),\n    position: 'fixed',\n    zIndex: 1000\n  }\n}));\n\nconst DataViewButtons = () => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const stateMarker = useSelector(state => state.marker);\n  const map = useMap();\n\n  function setGlobal() {\n    if (map.getZoom() >= stateMarker.cityZoom) {\n      map.setZoom(3);\n    }\n\n    batch(() => {\n      dispatch(setViewStatus(\"global\"));\n      dispatch(setDrawMode(NONE));\n    });\n  }\n\n  function setCity() {\n    if (map.getZoom() < stateMarker.cityZoom) {\n      map.setZoom(stateMarker.cityZoom);\n    }\n\n    batch(() => {\n      dispatch(setViewStatus(\"city\"));\n      dispatch(setDrawMode(NONE));\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.dataViewMargin,\n    elevation: 3,\n    children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n      row: true,\n      \"aria-label\": \"position\",\n      name: \"position\",\n      defaultValue: \"top\",\n      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n        value: \"top\",\n        control: /*#__PURE__*/_jsxDEV(Radio, {\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 24\n        }, this),\n        label: \"Global\",\n        checked: stateMarker.view_status === \"global\",\n        labelPlacement: \"top\",\n        onClick: setGlobal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        value: \"start\",\n        control: /*#__PURE__*/_jsxDEV(Radio, {\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 24\n        }, this),\n        label: \"City\",\n        checked: stateMarker.view_status === \"city\",\n        labelPlacement: \"top\",\n        onClick: setCity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DataViewButtons, \"E60FwxvjuUeyJ7Hv7vB24g8AMbQ=\", true, function () {\n  return [useStyles, useDispatch, useSelector];\n});\n\n_c = DataViewButtons;\nexport default DataViewButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataViewButtons\");","map":{"version":3,"sources":["C:/Users/Weilin/Documents/GitHub/UrbanTreeConservation/client/src/js/components/DataViewButtons.js"],"names":["makeStyles","useDispatch","useSelector","batch","setViewStatus","Radio","RadioGroup","FormControlLabel","Paper","useLeaflet","setDrawMode","NONE","useStyles","theme","dataViewMargin","margin","spacing","bottom","left","position","zIndex","DataViewButtons","classes","dispatch","stateMarker","state","marker","map","useMap","setGlobal","getZoom","cityZoom","setZoom","setCity","view_status"],"mappings":"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","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\nimport { useDispatch, useSelector, batch } from \"react-redux\";\r\nimport { setViewStatus } from \"../features/markerSlice\";\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useLeaflet } from \"react-leaflet\";\r\nimport { setDrawMode } from \"../features/mapSlice\";\r\nimport { NONE } from 'react-leaflet-freedraw';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dataViewMargin: {\r\n    margin: theme.spacing(1),\r\n    bottom: theme.spacing(1),\r\n    left: theme.spacing(1),\r\n    position: 'fixed',\r\n    zIndex: 1000,\r\n  }\r\n}));\r\n\r\n\r\nconst DataViewButtons = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const stateMarker = useSelector(state => state.marker);\r\n    const map = useMap()\r\n\r\n    function setGlobal() {\r\n        if (map.getZoom() >= stateMarker.cityZoom) {\r\n            map.setZoom(3);\r\n        }\r\n        batch(() => {\r\n            dispatch(setViewStatus(\"global\"));\r\n            dispatch(setDrawMode(NONE));\r\n        });\r\n    }\r\n\r\n    function setCity() {\r\n        if (map.getZoom() < stateMarker.cityZoom) {\r\n            map.setZoom(stateMarker.cityZoom);\r\n        }\r\n        batch(() => {\r\n            dispatch(setViewStatus(\"city\"));\r\n            dispatch(setDrawMode(NONE));\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Paper className={classes.dataViewMargin} elevation={3}>\r\n        <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\">\r\n            <FormControlLabel\r\n              value=\"top\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Global\"\r\n              checked={stateMarker.view_status === \"global\"}\r\n              labelPlacement=\"top\"\r\n              onClick={setGlobal}\r\n            />\r\n            <FormControlLabel\r\n              value=\"start\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"City\"\r\n              checked={stateMarker.view_status === \"city\"}\r\n              labelPlacement=\"top\"\r\n              onClick={setCity}\r\n            />\r\n        </RadioGroup>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default DataViewButtons;"]},"metadata":{},"sourceType":"module"}