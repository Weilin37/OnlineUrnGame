{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Weilin\\\\Documents\\\\GitHub\\\\UrbanTreeConservation\\\\client\\\\src\\\\js\\\\components\\\\FreeDrawButtons.js\",\n    _s = $RefreshSig$();\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { setDrawMode } from \"../features/mapSlice\";\nimport { useDispatch, useSelector, batch } from \"react-redux\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Fab from '@material-ui/core/Fab';\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport { ALL, DELETE } from 'react-leaflet-freedraw';\nimport { setViewStatus } from \"../features/markerSlice\";\nimport { useLeaflet } from \"react-leaflet\";\nconst useStyles = makeStyles(theme => ({\n  freeDrawMargin: {\n    margin: theme.spacing(1),\n    top: theme.spacing(16),\n    left: theme.spacing(1),\n    position: 'fixed',\n    zIndex: 1000\n  },\n  deleteMargin: {\n    margin: theme.spacing(1),\n    top: theme.spacing(22),\n    left: theme.spacing(1),\n    position: 'fixed',\n    zIndex: 1000\n  }\n}));\n\nconst FreeDrawButtons = () => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const stateMarker = useSelector(state => state.marker);\n  const {\n    map\n  } = useLeaflet();\n\n  function handleSwitchClick(e) {\n    if (map.getZoom() < stateMarker.cityZoom) {\n      map.setZoom(stateMarker.cityZoom);\n    }\n\n    dispatch(setDrawMode(ALL));\n    batch(() => {\n      dispatch(setViewStatus(\"freedraw\"));\n      dispatch(setDrawMode(ALL ^ DELETE));\n    });\n  }\n\n  function handleDeleteClick(e) {\n    dispatch(setDrawMode(DELETE));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Fab, {\n      onClick: handleSwitchClick,\n      className: classes.freeDrawMargin,\n      size: \"small\",\n      color: \"primary\",\n      \"aria-label\": \"add\",\n      children: /*#__PURE__*/_jsxDEV(BorderColorIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Fab, {\n      onClick: handleDeleteClick,\n      className: classes.deleteMargin,\n      size: \"small\",\n      color: \"secondary\",\n      \"aria-label\": \"add\",\n      children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FreeDrawButtons, \"5LffkE51rRZ7YECQ8RyOYu69IYs=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useLeaflet];\n});\n\n_c = FreeDrawButtons;\nexport default FreeDrawButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"FreeDrawButtons\");","map":{"version":3,"sources":["C:/Users/Weilin/Documents/GitHub/UrbanTreeConservation/client/src/js/components/FreeDrawButtons.js"],"names":["makeStyles","setDrawMode","useDispatch","useSelector","batch","DeleteIcon","Fab","BorderColorIcon","ALL","DELETE","setViewStatus","useLeaflet","useStyles","theme","freeDrawMargin","margin","spacing","top","left","position","zIndex","deleteMargin","FreeDrawButtons","classes","dispatch","stateMarker","state","marker","map","handleSwitchClick","e","getZoom","cityZoom","setZoom","handleDeleteClick"],"mappings":";;;;;AAAA,SAASA,UAAT,QAA2B,0BAA3B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,KAAnC,QAAgD,aAAhD;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,SAASC,GAAT,EAAcC,MAAd,QAA4B,wBAA5B;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAASC,UAAT,QAA2B,eAA3B;AAEA,MAAMC,SAAS,GAAGZ,UAAU,CAAEa,KAAD,KAAY;AACvCC,EAAAA,cAAc,EAAE;AACdC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADM;AAEdC,IAAAA,GAAG,EAAEJ,KAAK,CAACG,OAAN,CAAc,EAAd,CAFS;AAGdE,IAAAA,IAAI,EAAEL,KAAK,CAACG,OAAN,CAAc,CAAd,CAHQ;AAIdG,IAAAA,QAAQ,EAAE,OAJI;AAKdC,IAAAA,MAAM,EAAE;AALM,GADuB;AAQvCC,EAAAA,YAAY,EAAE;AACZN,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADI;AAEZC,IAAAA,GAAG,EAAEJ,KAAK,CAACG,OAAN,CAAc,EAAd,CAFO;AAGZE,IAAAA,IAAI,EAAEL,KAAK,CAACG,OAAN,CAAc,CAAd,CAHM;AAIZG,IAAAA,QAAQ,EAAE,OAJE;AAKZC,IAAAA,MAAM,EAAE;AALI;AARyB,CAAZ,CAAD,CAA5B;;AAkBA,MAAME,eAAe,GAAG,MAAM;AAAA;;AAC1B,QAAMC,OAAO,GAAGX,SAAS,EAAzB;AACA,QAAMY,QAAQ,GAAGtB,WAAW,EAA5B;AACA,QAAMuB,WAAW,GAAGtB,WAAW,CAACuB,KAAK,IAAIA,KAAK,CAACC,MAAhB,CAA/B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAUjB,UAAU,EAA1B;;AAEA,WAASkB,iBAAT,CAA2BC,CAA3B,EAA8B;AAC1B,QAAIF,GAAG,CAACG,OAAJ,KAAgBN,WAAW,CAACO,QAAhC,EAA0C;AACtCJ,MAAAA,GAAG,CAACK,OAAJ,CAAYR,WAAW,CAACO,QAAxB;AACH;;AACDR,IAAAA,QAAQ,CAACvB,WAAW,CAAEO,GAAF,CAAZ,CAAR;AACAJ,IAAAA,KAAK,CAAC,MAAM;AACRoB,MAAAA,QAAQ,CAACd,aAAa,CAAC,UAAD,CAAd,CAAR;AACAc,MAAAA,QAAQ,CAACvB,WAAW,CAAEO,GAAG,GAAGC,MAAR,CAAZ,CAAR;AACH,KAHI,CAAL;AAIH;;AAED,WAASyB,iBAAT,CAA2BJ,CAA3B,EAA8B;AAC1BN,IAAAA,QAAQ,CAACvB,WAAW,CAACQ,MAAD,CAAZ,CAAR;AACH;;AAED,sBACI;AAAA,4BACI,QAAC,GAAD;AAAK,MAAA,OAAO,EAAEoB,iBAAd;AAAiC,MAAA,SAAS,EAAEN,OAAO,CAACT,cAApD;AAAoE,MAAA,IAAI,EAAC,OAAzE;AAAiF,MAAA,KAAK,EAAC,SAAvF;AAAiG,oBAAW,KAA5G;AAAA,6BACI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,GAAD;AAAK,MAAA,OAAO,EAAEoB,iBAAd;AAAiC,MAAA,SAAS,EAAEX,OAAO,CAACF,YAApD;AAAkE,MAAA,IAAI,EAAC,OAAvE;AAA+E,MAAA,KAAK,EAAC,WAArF;AAAiG,oBAAW,KAA5G;AAAA,6BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA/BD;;GAAMC,e;UACcV,S,EACCV,W,EACGC,W,EACJQ,U;;;KAJdW,e;AAiCN,eAAeA,eAAf","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\nimport { setDrawMode } from \"../features/mapSlice\";\r\nimport { useDispatch, useSelector, batch } from \"react-redux\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport { ALL, DELETE } from 'react-leaflet-freedraw';\r\nimport { setViewStatus } from \"../features/markerSlice\";\r\nimport { useLeaflet } from \"react-leaflet\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  freeDrawMargin: {\r\n    margin: theme.spacing(1),\r\n    top: theme.spacing(16),\r\n    left: theme.spacing(1),\r\n    position: 'fixed',\r\n    zIndex: 1000,\r\n  },\r\n  deleteMargin: {\r\n    margin: theme.spacing(1),\r\n    top: theme.spacing(22),\r\n    left: theme.spacing(1),\r\n    position: 'fixed',\r\n    zIndex: 1000,\r\n  }\r\n}));\r\n\r\n\r\nconst FreeDrawButtons = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const stateMarker = useSelector(state => state.marker);\r\n    const { map } = useLeaflet();\r\n\r\n    function handleSwitchClick(e) {\r\n        if (map.getZoom() < stateMarker.cityZoom) {\r\n            map.setZoom(stateMarker.cityZoom);\r\n        }\r\n        dispatch(setDrawMode((ALL)));\r\n        batch(() => {\r\n            dispatch(setViewStatus(\"freedraw\"));\r\n            dispatch(setDrawMode((ALL ^ DELETE)));\r\n        });\r\n    }\r\n\r\n    function handleDeleteClick(e) {\r\n        dispatch(setDrawMode(DELETE));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Fab onClick={handleSwitchClick} className={classes.freeDrawMargin} size=\"small\" color=\"primary\" aria-label=\"add\">\r\n                <BorderColorIcon />\r\n            </Fab>\r\n            <Fab onClick={handleDeleteClick} className={classes.deleteMargin} size=\"small\" color=\"secondary\" aria-label=\"add\">\r\n                <DeleteIcon />\r\n            </Fab>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FreeDrawButtons;"]},"metadata":{},"sourceType":"module"}